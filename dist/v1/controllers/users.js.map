{"version":3,"sources":["../../../api/v1/controllers/users.js"],"names":["router","express","Router","session","dbpackage","users","get","req","res","json","user","loginState","render","msg","username","post","body","toString","password","found","map","userId","email","error","errorMsg","errorType","tempUserId","push","redirect"],"mappings":"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","file":"users.js","sourcesContent":["import express from 'express';\r\nimport generateUniqueId from '../helpers/genUniqueId';\r\nimport getStoredUserId from '../helpers/getUserId';\r\nimport getStoredUserEmail from '../helpers/getUserEmail';\r\nimport dbpackage from '../model/dbstruct';\r\n\r\nconst router = express.Router();\r\n\r\nlet { session } = dbpackage;\r\nconst { users } = dbpackage;\r\n\r\nrouter.get('/getuser', (req, res) => {\r\n  res.json(session.user);\r\n});\r\n\r\nrouter.get('/', (req, res) => {\r\n  if (session.loginState === true) {\r\n    res.render('userlanding', {\r\n      msg: {\r\n       user: session.user.username,\r\n      },\r\n    });\r\n  } else {\r\n    res.render('index', {\r\n      msg: {\r\n        user: 'Guest',\r\n      },\r\n    });\r\n  }\r\n});\r\n\r\nrouter.get('/addquestion', (req, res) => {\r\n  res.render('addQuestion');\r\n});\r\n\r\nrouter.get('/loginForm', (req, res) => {\r\n  res.render('form');\r\n});\r\n\r\nrouter.post('/login', (req, res) => {\r\n  const username = req.body.username.toString();\r\n  const password = req.body.password.toString();\r\n  let found = false;\r\n  users.map((user) => {\r\n    found = (user.username === username && user.password === password) ? true : found;\r\n    return false;\r\n  });\r\n  if (found === true) {\r\n    session.loginState = true;\r\n    session.user = {\r\n      username,\r\n      userId: getStoredUserId(users, username),\r\n      email: getStoredUserEmail(users, username),\r\n    };\r\n    res.render('userlanding', {\r\n      msg: {\r\n        user: username,\r\n      },\r\n    });\r\n  } else {\r\n    res.render('error', {\r\n      error: {\r\n        errorMsg: 'Sign up to create an account',\r\n        errorType: 'User Not Found',\r\n      },\r\n    });\r\n  }\r\n});\r\n\r\nrouter.get('/signUpForm', (req, res) => {\r\n  res.render('signup');\r\n});\r\n\r\nrouter.post('/signup', (req, res) => {\r\n  const { username, email, password } = req.body;\r\n  let found = false;\r\n  users.map((user) => {\r\n    found = (user.username === username) ? true : found;\r\n    return false;\r\n  });\r\n  if (found === false) {\r\n    const tempUserId = generateUniqueId(users, 'userId');\r\n    users.push({\r\n      username,\r\n      email,\r\n      password,\r\n      userId: tempUserId,\r\n    });\r\n    session.loginState = true;\r\n    session.user = {\r\n      userId: tempUserId,\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n    res.render('userlanding', {\r\n      msg: {\r\n        user: username,\r\n      },\r\n    });\r\n  } else {\r\n    res.render('error', {\r\n      error: {\r\n        errorMsg: 'Sign up with a different username',\r\n        errorType: 'Username Already Exists',\r\n      },\r\n    });\r\n  }\r\n});\r\n\r\nrouter.get('/profile', (req, res) => {\r\n  res.render('userprofile', {\r\n    user: session.user,\r\n  });\r\n});\r\n\r\nrouter.get('/logout', (req, res) => {\r\n  session = [];\r\n  res.redirect('/api/v1');\r\n});\r\n\r\nexport default router;\r\n"]}