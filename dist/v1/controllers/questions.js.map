{"version":3,"sources":["../../../api/v1/controllers/questions.js"],"names":["router","express","Router","questions","dbpackage","answers","get","req","res","json","post","send","id","Number","params","found","filter","o","questionId","length","qId","answerForQuestion","keyword","body","question","toLowerCase","indexOf","qid","unshift","userId","username","questId","entPut","answer","push","answerId","answerState","votes","comments","goAhead","map","redirect","render","error","errorMsg","errorType","aId","uId","ans","acceptState","userQuestions","qtn","qansd","foundquestions","questionsAnswered","modeqtn","topqtn","ansId","comment","commentId"],"mappings":"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","file":"questions.js","sourcesContent":["import express from 'express';\r\nimport dbpackage from '../model/dbstruct';\r\nimport generateUniqueId from '../helpers/genUniqueId';\r\nimport mode from '../helpers/mode';\r\n\r\nconst router = express.Router();\r\nlet { questions, answers } = dbpackage;\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.json(questions);\r\n});\r\n\r\nrouter.post('/error', (req, res) => {\r\n  res.send('There was an error!');\r\n});\r\n\r\nrouter.get('/:id', (req, res) => {\r\n  const id = Number(req.params.id);\r\n  const found = questions.filter(o => o.questionId === id);\r\n  if (found.length === 1) {\r\n    res.json(found[0]);\r\n  } else {\r\n    res.send(`This question id [ ${id} ] doesnt exit yet, create it by posting at \"/questions\"`);\r\n  }\r\n});\r\n\r\nrouter.get('/questionThread/:qId', (req, res) => {\r\n  const id = Number(req.params.qId);\r\n  const found = questions.filter(o => o.questionId === id);\r\n  if (found.length === 1) {\r\n    const qId = found[0].questionId;\r\n    const answerForQuestion = answers.filter(o => o.questionId === qId);\r\n    res.json(answerForQuestion);\r\n  } else {\r\n    res.send('This question id was not found');\r\n  }\r\n});\r\n\r\nrouter.post('/findQuestion', (req, res) => {\r\n  const { keyword } = req.body;\r\n  const found = questions.filter(\r\n    o => o.question.toLowerCase().indexOf(keyword.toLowerCase()) !== -1,\r\n  );\r\n  if (found.length !== 0) {\r\n    res.json(found);\r\n  } else {\r\n    res.send('Keyword not found!');\r\n  }\r\n});\r\n\r\nrouter.post('/findQuestionById', (req, res) => {\r\n  const qId = Number(req.body.qid);\r\n  const found = questions.filter(question => question.questionId === qId);\r\n  if (found.length !== 0) {\r\n    res.json(found);\r\n  } else {\r\n    res.send('Question id not found!');\r\n  }\r\n});\r\n\r\nrouter.post('/', (req, res) => {\r\n  questions.unshift({\r\n    questionId: Number(generateUniqueId(questions, 'questionId')),\r\n    userId: Number(req.body.userId),\r\n    username: req.body.username,\r\n    question: req.body.question,\r\n  });\r\n  res.json(questions);\r\n});\r\n\r\nrouter.post('/:id/answers', (req, res) => {\r\n  const questId = req.params.id;\r\n  const entPut = req.body.answer;\r\n  answers.push({\r\n    answerId: generateUniqueId(answers, 'answerId'),\r\n    questionId: Number(questId),\r\n    userId: Number(req.body.userId),\r\n    username: req.body.username,\r\n    answer: entPut,\r\n    answerState: '',\r\n    votes: 0,\r\n    comments: [],\r\n  });\r\n  res.json(answers);\r\n});\r\n\r\nrouter.post('/:id/delete', (req, res) => {\r\n  const questId = Number(req.params.id);\r\n  const { userId } = req.body;\r\n  let goAhead = false;\r\n  questions.map((question) => {\r\n    if (question.questionId === questId && question.userId === Number(userId)) {\r\n      goAhead = true;\r\n    }\r\n    return true;\r\n  });\r\n  if (goAhead === true) {\r\n    questions = questions.filter(question => question.questionId !== questId);\r\n    answers = answers.filter(answer => answer.questionId !== questId);\r\n    res.redirect('/api/v1/questions');\r\n  } else {\r\n    res.render('usererror', {\r\n      error: {\r\n        errorMsg: 'You are not the author of this question, therefore you cant delete it',\r\n        errorType: 'Delete Not Allowed',\r\n      },\r\n    });\r\n  }\r\n});\r\n\r\nrouter.post('/:qId/:aId/accept', (req, res) => {\r\n  const questId = Number(req.params.qId);\r\n  const answerId = Number(req.params.aId);\r\n  const uId = req.body.userId;\r\n  let goAhead = false;\r\n  questions.map((question) => {\r\n    if (question.questionId === questId && question.userId === Number(uId)) {\r\n      goAhead = true;\r\n    }\r\n    return true;\r\n  });\r\n  /* eslint-disable no-param-reassign */\r\n  if (goAhead === true) {\r\n    answers.map((ans) => {\r\n      if (ans.answerId === answerId) {\r\n        ans.acceptState = 'accepted';\r\n      } else {\r\n        ans.acceptState = '';\r\n      }\r\n      return true;\r\n    });\r\n    res.json(answers);\r\n  } else {\r\n    res.send('You cant accept this, you didnt create the question');\r\n  }\r\n});\r\n\r\nrouter.get('/:qId/:aId/vote', (req, res) => {\r\n  answers.map((answer) => {\r\n    if (answer.questionId === Number(req.params.qId)\r\n    && answer.answerId === Number(req.params.aId)) {\r\n      answer.votes += 1;\r\n    }\r\n    return false;\r\n  });\r\n  res.json(answers);\r\n});\r\n\r\nrouter.get('/:downvote/:qId/:aId', (req, res) => {\r\n  answers.map((answer) => {\r\n    if (answer.questionId === Number(req.params.qId)\r\n    && answer.answerId === Number(req.params.aId)) {\r\n      if (answer.votes > 0) {\r\n        answer.votes -= 1;\r\n      } else {\r\n        answer.votes = answer.votes;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n  res.json(answers);\r\n});\r\n\r\nrouter.get('/user/:userId', (req, res) => {\r\n  const uId = Number(req.params.userId);\r\n  const userQuestions = questions.filter(qtn => qtn.userId === uId);\r\n  res.json(userQuestions);\r\n});\r\n\r\nrouter.get('/questionsAnswered/:userId', (req, res) => {\r\n  const uId = Number(req.params.userId);\r\n  const qansd = [];\r\n  answers.map((ans) => {\r\n    if (ans.userId === uId) {\r\n      qansd.push(ans.questionId);\r\n    }\r\n    return false;\r\n  });\r\n  const foundquestions = [];\r\n  qansd.map((id) => {\r\n    questions.map((question) => {\r\n      if (question.questionId === id) {\r\n        foundquestions.push(question);\r\n      }\r\n      return false;\r\n    });\r\n    return false;\r\n  });\r\n  res.json(foundquestions);\r\n});\r\n\r\nrouter.get('/topquestion/:uId', (req, res) => {\r\n  const uId = Number(req.params.uId);\r\n  const userQuestions = questions.filter(qtn => Number(qtn.userId) === uId);\r\n  const questionsAnswered = [];\r\n  userQuestions.map((question) => {\r\n    answers.map((answer) => {\r\n      if (answer.questionId === question.questionId) {\r\n        questionsAnswered.push(question.questionId);\r\n      }\r\n      return false;\r\n    });\r\n    return false;\r\n  });\r\n  const modeqtn = mode(questionsAnswered);\r\n  const topqtn = userQuestions.filter(question => question.questionId === modeqtn);\r\n  res.json(topqtn);\r\n});\r\n\r\nrouter.post('/addcomment/:qId/:answerId', (req, res) => {\r\n  const questId = Number(req.params.qId);\r\n  const ansId = Number(req.params.answerId);\r\n  const { comment } = req.body;\r\n  answers.map((ans) => {\r\n   if (ans.questionId === questId && ans.answerId === ansId) {\r\n      ans.comments.push({\r\n        commentId: generateUniqueId(ans.comments, 'commentId'),\r\n        comment,\r\n        userId: req.body.userId,\r\n        username: req.body.username,\r\n        questionId: questId,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n  res.json(answers);\r\n});\r\n\r\n\r\nexport default router;\r\n"]}